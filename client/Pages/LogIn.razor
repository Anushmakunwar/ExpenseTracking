@page "/"
@inject HttpClient Http
@layout NoNavLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

@* <div class="login-container"> *@
    <!-- Form Section -->
    <div class="login-form-container">
        <h1 class="login-title">Welcome to the Money Management App</h1>
        <h2 class="login-subtitle">Management App</h2>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="login-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Username -->
            <div class="input-group">
                <label for="username" class="input-label">Username</label>
                <InputText id="username" class="input-field" @bind-Value="loginModel.Username" placeholder="yourname@example.com" />
                <ValidationMessage For="@(() => loginModel.Username)" />
            </div>

            <!-- Password -->
            <div class="input-group">
                <label for="password" class="input-label">Password</label>
                <InputText id="password" type="password" class="input-field" @bind-Value="loginModel.Password" placeholder="yourpassword" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <!-- Forgot Password -->
          

            <!-- Sign In Button -->
            <div>
                <button type="submit" class="submit-button">
                    Sign In
                </button>
            </div>
        </EditForm>

        <!-- Separator with "Or" -->
        <div class="separator">
            <span class="separator-line"></span>
            <span class="separator-text">Or</span>
            <span class="separator-line"></span>
        </div>

        <!-- Register Link -->
        <div class="register-link-container">
            <span>New to the App?</span>
            <a href="/register" class="register-link">Register</a>
        </div>
    @* </div> *@
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        Console.WriteLine("Submitting form...");
        Console.WriteLine($"Username: {loginModel.Username}, Password: {loginModel.Password}");

        var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var tokenResponse = await response.Content.ReadFromJsonAsync<TokenResponse>();  

            if (tokenResponse != null)
            {
                var token = tokenResponse.Token;
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);  

                Console.WriteLine("Login successful.");
                NavigationManager.NavigateTo("/dashboard");
            }
        }
        else
        {
            Console.WriteLine("Login failed.");
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string? Username { get; set; }  
        [Required(ErrorMessage = "Password is required")]
        public string? Password { get; set; } 
    }

    public class TokenResponse
    {
        public string Token { get; set; }
    }
}
