@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <!-- Ensure logo is always visible -->
        <a class="navbar-brand" href="">Money Mintra</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="d-flex flex-column">
        <!-- Make sure the Home link is not affecting the logo -->
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="dashboard" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="transactions">
                <span class="bi-cash-coin-nav-menu" aria-hidden="true"></span> Transaction
            </NavLink>
        </div>        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tags">
                <span class="bi-bookmark-check-nav-menu" aria-hidden="true"></span> Tag
            </NavLink>
        </div>

        <!-- Logout link at the bottom -->
        <div class="nav-item px-3 mt-auto">
            <NavLink class="nav-link" href="/" @onclick="Logout">
                <span class="bi-box-arrow-left-nav-menu" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
     private async Task Logout()
    {
        // Clear localStorage
        await JSRuntime.InvokeVoidAsync("localStorage.clear", "authToken");

        // Clear cookies (optional: you can specify a cookie name if you need)
        await JSRuntime.InvokeVoidAsync("document.cookie.split(';').forEach(function(c) { document.cookie = c.trim().split('=')[0] + '=;expires=' + new Date(0).toUTCString() + '; path=/'; })");

        // Redirect to login page
    }
}
